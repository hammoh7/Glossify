// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid()) @map("_id")
  name          String
  email         String  @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
}

model Account {
  id                  String  @id @default(uuid()) @map("_id")
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String
  access_token        String
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Courses {
  id          String  @id @default(uuid()) @map("_id")
  title       String
  imageSrc    String
  userProgress UserProgress[]
}

model UserProgress {
  userId         String   @id @default(uuid()) @map("_id")
  userName       String
  userImageSrc   String
  activeCourseId String?
  hearts         Int
  points         Int
  activeCourse   Courses?  @relation(fields: [activeCourseId], references: [id])
}